Index: frontend/src/components/Chat.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n    <div id = \"all\">\r\n        <div id=\"message_box\">\r\n            <div id=\"message_show\" class=\"message_show\">\r\n                <div v-for=\"item in myMessages\" :key=\"item.id\">\r\n                    <div class=\"message_time\">\r\n                        <span>{{item.time}}</span>\r\n                    </div>\r\n                    <div class=\"message_is_me\" v-if=\"item.content != null\">\r\n                        <div class=\"col_is_me\">\r\n                            <el-avatar shape=\"square\" icon=el-icon-user-solid></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_is_me_content\">\r\n                            <span v-html=\"item.content\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"message_not_me\" v-if=\"item.content === 'Testcontent'\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <span>Sorry! I cannot understand.</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"message_not_me\" v-if=\"item.content === 'Testcontent'\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <span @click=\"dialogVisible = true\">Can you answer some questions so we can recommend house for you.</span>\r\n                            <el-button id=\"ok\" size=\"medium\" type=\"primary\" @click=\"dialogVisible = true\">OK</el-button>\r\n                        </div>\r\n                    </div>\r\n\r\n                  <div class=\"message_not_me\" v-if=\"item.reply != null\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <span v-html=\"item.reply\"></span>\r\n                        </div>\r\n                        <!--<div class=\"message_not_me_content\" v-if=\"status ==='0'\">\r\n                            <router-link to=\"/recommend\">Click to see our recommendation for you.</router-link>\r\n                        </div>-->\r\n                  </div>\r\n                    <!--<div class=\"message_not_me\" v-if=\"status ==='0'&& item.content != null\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <router-link to=\"/recommend\">Click to see our recommendation for you.</router-link>\r\n                        </div>\r\n                    </div>-->\r\n                </div>\r\n              <div class=\"message_not_me\" v-if=\"status\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <router-link to=\"/recommend\">{{this.recommendLink}}</router-link>\r\n                        </div>\r\n              </div>\r\n              <div class=\"message_not_me\" v-if=\"questionType[0]==0||questionType[0]==2\">\r\n                        <div class=\"col_not_me\">\r\n                            <el-avatar src=\"http://img.qqzhi.com/uploads/2019-02-25/230332138.jpg\"></el-avatar>\r\n                        </div>\r\n                        <div class=\"message_not_me_content\">\r\n                            <span @click=\"dialogVisible = true\" v-bind:style=\"styleObject\">Click here to get the questionnaire.</span>\r\n                        </div>\r\n              </div>\r\n            </div>\r\n            <div id=\"message_send\">\r\n                <br/>\r\n                <el-input\r\n                        type=\"textarea\"\r\n                        :autosize=\"{ minRows: 5, maxRows: 8}\"\r\n                        placeholder=\"Please enter your message\"\r\n                        v-model=\"textarea\"\r\n                        maxlength=\"300\"\r\n                        show-word-limit\r\n                        clearable\r\n                >\r\n                </el-input>\r\n                <br/>\r\n                <el-button id=\"send\" size=\"medium\" type=\"primary\" @click=\"sendMessage()\">send</el-button>\r\n            </div>\r\n        </div>\r\n        <el-dialog\r\n                title=\" \"\r\n                :visible.sync=\"dialogVisible\"\r\n                width=\"30%\"\r\n                :before-close=\"handleClose\"\r\n                fullscreen = true\r\n                id=\"q\"\r\n\r\n        >\r\n            <Questions ref=\"questionnaire\" :message = \"questionType\"  ></Questions><!--v-on:=\"closeDialogue = 'handleClose'\"-->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                        <el-button @click=\"dialogVisible = false\">Cancel</el-button>\r\n                        <!--<el-button type=\"primary\" @click=\"dialogVisible = false\">Submit</el-button>-->\r\n                        <el-button type=\"primary\" @click= \"submit()\">Submit</el-button>\r\n                    </span>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    import Questions from '../components/Questions.vue'\r\n    export default {\r\n        name: 'Chat.vue',\r\n        components: {Questions: Questions},\r\n        status:false,\r\n        mounted () {\r\n            this.scrollToBottom()\r\n        },\r\n        data: function () {\r\n            return {\r\n              rstatus:this.$store.state.status,\r\n              styleObject: {\r\n                color: \"#660099\",\r\n                textDecoration:\"underline\",\r\n              },\r\n                recommendLink:\"Click here to get our recommendations for you.\",\r\n                isRecommend:false,\r\n                isReloadData:true,\r\n                textarea: '',\r\n                myMessages: [\r\n                  {time: \"testtime\"},\r\n                  {content: 'Testcontent'},\r\n                  {reply:\"Welcome to the Smart House Recommendation Assistant\"},\r\n                  {reply: \"Do you need us to recommend suitable housing information for you?\"}],\r\n                /*myMessages: [],*/\r\n                messageTime: [],\r\n                time: 'now',\r\n                randomNumber:0,\r\n                dialogVisible: false,\r\n                /*总对话数*/\r\n                processNumber:0,\r\n                /*正在进行的对话次数*/\r\n                currentProcess:0,\r\n              //问卷类型， 0为选填，1为直接推荐，2为必填\r\n                questionType:[1],\r\n\r\n            }\r\n        },\r\n\r\n        updated: function () {\r\n            this.scrollToBottom()\r\n        },\r\n        watch:{\r\n          rstatus(newVal, oldVal) {\r\n            alert(newVal)\r\n          }\r\n        },\r\n        methods: {\r\n         /* handleClose:function(data){\r\n              alert(data)\r\n          },*/\r\n          reload () {\r\n            this.isReloadData = false\r\n            this.$nextTick(() => {\r\n              this.isReloadData = true\r\n            })\r\n          },\r\n            // 滚动条自动保持在底部\r\n            scrollToBottom: function () {\r\n                this.$nextTick(() => {\r\n                    var container = this.$el.querySelector('#message_show')\r\n                    container.scrollTop = container.scrollHeight\r\n                })\r\n            },\r\n          //处理文本换行\r\n            preText (pretext) {\r\n              return pretext.replace(/\\r\\n/g, '<br/>').replace(/\\n/g, '<br/>')\r\n            },\r\n            sendMessage () {\r\n                let yy = new Date().getFullYear()\r\n                let mm = new Date().getMonth() + 1\r\n                let dd = new Date().getDate()\r\n                let hh = new Date().getHours()\r\n                let mf = new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()\r\n                let ss = new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()\r\n                var time = yy + '-' + mm + '-' + dd + ' ' + hh + ':' + mf + ':' + ss\r\n                var message =  this.preText(this.textarea)\r\n                if(message.match(/^[ ]+$/)||message===\"\"){\r\n                    /*alert(\"invalid null message\")*/\r\n                  this.$notify.error({\r\n                    message: 'Invalid null message,please try again',\r\n                    duration: 2000\r\n                  });\r\n                }\r\n                else{\r\n                    this.myMessages.push({ time: time })\r\n                    this.myMessages.push({ content: message })\r\n                    /*this.myMessages.push({ reply: message })*/\r\n                    this.process(message)\r\n                    /*this.status = \"1\"*/\r\n                    /*this.$store.commit(\"newStatus\",this.status)*/\r\n                }\r\n                this.textarea = ''\r\n                this.randomNumber = this.getRandomFromBackend()\r\n\r\n            },\r\n            process(message){\r\n                const path = 'http://localhost:5000/api/nlp'\r\n                let data = [message,this.processNumber,this.currentProcess]\r\n                axios.post(path, data)\r\n                    .then(response => {\r\n                      let re = response.data.reply\r\n                      /*alert(re[1])\r\n                      alert(re[2])*/\r\n                      if (re[1]==16){//选填问卷\r\n                        this.questionType[0] = 0\r\n                        this.questionType = this.questionType.concat(re[3])\r\n                        /*this.questionType.push(this.dialogVisible)*/\r\n\r\n                      }\r\n                      else if(re[1]==17&&re[2]==0){//直接推荐\r\n                          this.myMessages.push({ reply: \"Since you choose not to fill the questionnaire, we will directly find houses for you according to your answers above.\" })\r\n                          /*this.myMessages.push({ reply: \"The system is working, please wait for a while.\" })*/\r\n                          this.questionType[0] = 1\r\n                      /*  this.$refs.questionnaire.recommend(re[3])*/\r\n                        this.$store.commit(\"newRecommendation\",re[3])\r\n                        this.$store.commit(\"newStatus\",\"1\")\r\n                        this.status = true\r\n                        /*this.$nextTick(() => {\r\n                          this.status = true\r\n                        })*/\r\n                        this.textarea = \" \"\r\n                        this.textarea = \"\"\r\n                        this.recommendLink = \"Click here to get our recommendations for you.\"\r\n                        /*this.status = */\r\n                        /*this.reload()*/\r\n                        /*alert(this.$store.state.recommendation)*/\r\n                        /*this.$router.push(\"/recommend\");*/\r\n                      }\r\n                      else if(re[1]==15){//有回复，填必填问卷\r\n                        let rep = this.preText(re[0])\r\n                        this.myMessages.push({ reply: rep })\r\n                        this.questionType[0] = 2\r\n                        this.questionType = this.questionType.concat(re[3])\r\n                      }\r\n                      else{\r\n                        let rep = this.preText(re[0])\r\n                        this.myMessages.push({ reply: rep })\r\n                      }\r\n                      this.processNumber = re[1]\r\n                      this.currentProcess = re[2]\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n\r\n                    })\r\n\r\n            },\r\n            submit(){\r\n                let a = this.$refs.questionnaire.recommend()\r\n                alert(a)\r\n                /*this.dialogVisible = this.$refs.questionnaire.visible*/\r\n                /*this.dialogVisible = this.$refs.questionnaire.visible*/\r\n                /*this.status = this.$store.state.status*/\r\n                /*this.dialogVisible = false*/\r\n                this.questionType[0] = 1\r\n            },\r\n           /* changeStatus(){\r\n                if(this.$store.state.status==\"0\"){\r\n                    this.status = this.$store.state.status\r\n                    this.dialogVisible = false\r\n                }\r\n            },*/\r\n            /*getRandom (){\r\n                this.randomNumber = this.getRandomFromBackend()\r\n            },\r\n            getRandomFromBackend (){\r\n                const path = 'http://localhost:5000/api/random'\r\n                axios.get(path)\r\n                    .then(response => {\r\n                        this.randomNumber = response.data.randomNumber\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            },*/\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    /*.el-button{\r\n        background-color: #66A4AC;\r\n\r\n    }*/\r\n    /*#all{\r\n        background: #C2DDE4;\r\n    }*/\r\n    #message_box{\r\n        border: 1px solid #d7dae2;\r\n        border-radius: 4px ;\r\n        background: #f4f5f7;\r\n        box-shadow: 0 1px 2px rgba(0, 0, 0, .12);\r\n        width: 80%;\r\n        height: 650px;\r\n        margin: 0 auto;\r\n        margin-top: 20px;\r\n    }\r\n    #message_show{\r\n        height: 430px;\r\n        border-bottom: 1px solid #000000;\r\n        overflow-y:auto;\r\n    }\r\n    .message_time{\r\n        text-align: center;\r\n        font-size: 15px;\r\n        color: gray;\r\n        padding: 10px 0px;\r\n    }\r\n    .message_is_me{\r\n        width: 100%;\r\n        float: right;\r\n        overflow: hidden;\r\n    }\r\n    .message_is_me_content{\r\n        float: right;\r\n        color: white;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        border-radius: 8px 0px 8px 8px ;\r\n        background: #06565B;\r\n        max-width: 70%;\r\n        width: fit-content;\r\n        word-wrap: break-word;\r\n        word-break: break-all;\r\n        overflow: hidden;\r\n    }\r\n    .col_is_me{\r\n        width: 40px;\r\n        float: right;\r\n        padding: 0px 10px;\r\n    }\r\n    .message_not_me{\r\n        width: 100%;\r\n        float: left;\r\n        overflow: hidden;\r\n    }\r\n    .message_not_me_content{\r\n        float: left;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        border-radius: 0px 8px 8px 8px ;\r\n        background: white;\r\n        width: fit-content;\r\n        max-width: 70%;\r\n        word-wrap: break-word;\r\n        word-break: break-all;\r\n        overflow: hidden;\r\n    }\r\n    .col_not_me{\r\n        width: 40px;\r\n        float: left;\r\n        padding: 0px 10px;\r\n    }\r\n    #message_send{\r\n        padding-left: 10px;\r\n        width: 97%;\r\n    }\r\n    #send{\r\n        float: right;\r\n        margin-top: 20px;\r\n    }\r\n\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/components/Chat.vue	(revision 2e68d45e5be8157f652ae2942bb03be76e766502)
+++ frontend/src/components/Chat.vue	(date 1620454155162)
@@ -256,12 +256,19 @@
 
             },
             submit(){
-                let a = this.$refs.questionnaire.recommend()
-                alert(a)
+                /*let a = this.$refs.questionnaire.recommend()
+                alert(a)*/
                 /*this.dialogVisible = this.$refs.questionnaire.visible*/
                 /*this.dialogVisible = this.$refs.questionnaire.visible*/
                 /*this.status = this.$store.state.status*/
-                /*this.dialogVisible = false*/
+                this.dialogVisible = false
+                /*let data = [this.$refs.form.classification,this.$refs.form.inputSize,this.$refs.form.flatness,this.$refs.form.utility,this.$refs.form.neighborhood,
+                            this.$refs.form.style,this.$refs.form.year,this.$refs.form.roof,this.$refs.form.vaneer,this.$refs.form.foundation,this.$refs.form.basement,
+                            this.$refs.form.heating,this.$refs.form.air,this.$refs.form.electrical,this.$refs.form.living,this.$refs.form.fullbath,this.$refs.form.halfbath,
+                            this.$refs.form.bedroom,this.$refs.form.kitchen,this.$refs.form.room,this.$refs.form.fire,this.$refs.form.garage,this.$refs.form.deck,
+                            this.$refs.form.pool,this.$refs.form.price]*/
+                alert(this.$refs.questionnaire.form.price)
+                console.log(this.$refs.questionnaire.form.price)
                 this.questionType[0] = 1
             },
            /* changeStatus(){
Index: frontend/src/router/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport HouseList from \"../components/HouseList\"\r\nimport Recommend from \"../components/Recommend\"\r\nimport Chat from \"../components/Chat\";\r\nimport Welcome from \"../Welcome\";\r\nimport HouseItem from \"@/components/HouseItem\";\r\n\r\n\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Welcome',\r\n    component: Welcome\r\n  },\r\n  {\r\n    path: '/welcome',\r\n    name: 'Welcome',\r\n    component: Welcome\r\n  },\r\n  // {\r\n  //   path: '/about',\r\n  //   name: 'About',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\r\n  // },\r\n  {\r\n    path: '/Chat',\r\n    name: 'Chat',\r\n    component: Chat,\r\n    meta:{\r\n      keepAlive:true\r\n    }\r\n  },\r\n  // {\r\n  //   path: '/Chat',\r\n  //   name: 'Chat',\r\n  //   component: Chat\r\n  // },\r\n  {\r\n    path: '/house',\r\n    name: 'house',\r\n    component: HouseList,\r\n    meta:{\r\n      keepAlive:true\r\n    }\r\n  },\r\n  {\r\n    path: '/recommend',\r\n    name: 'recommend',\r\n    component: Recommend,\r\n\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport default router\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/src/router/index.js	(revision 2e68d45e5be8157f652ae2942bb03be76e766502)
+++ frontend/src/router/index.js	(date 1620453518491)
@@ -5,7 +5,7 @@
 import Recommend from "../components/Recommend"
 import Chat from "../components/Chat";
 import Welcome from "../Welcome";
-import HouseItem from "@/components/HouseItem";
+
 
 
 
Index: frontend/src/components/HouseItem.vue
===================================================================
--- frontend/src/components/HouseItem.vue	(revision 2e68d45e5be8157f652ae2942bb03be76e766502)
+++ frontend/src/components/HouseItem.vue	(revision 2e68d45e5be8157f652ae2942bb03be76e766502)
@@ -1,222 +0,0 @@
-<template>
-<div>
-    <el-row gutter="20" >
-      <el-col :span="6" v-for="item in houses.slice((currentPage - 1) * pageSize, currentPage*pageSize)" :key="item.id">
-            <el-card :body-style="{ padding: '20px' }" shadow ="hover">
-                <img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2287568211,2342036693&fm=26&gp=0.jpg" class="image">
-                <div style="padding: 14px;">
-                    <!--<h2>Price: $2000</h2>
-                    <span>1 bd, 1 ba, 288 sqft</span>
-                    <br>
-                    <span>neighborhood</span>-->
-                    <h2>{{item.price}}</h2>
-                    <span>{{ item.room }}</span>
-                    <br>
-                    <span>{{ item.neighborhood }}</span>
-                    <br>
-                    <span>{{ item.type }}</span>
-                    <div class="bottom clearfix">
-                        <el-button type="text" class="button">View Details</el-button>
-                    </div>
-                </div>
-            </el-card>
-        </el-col>
-    </el-row>
-  <el-pagination
-                @size-change="handleSizeChange"
-                @current-change="handleCurrentChange"
-                :current-page="currentPage"
-                :page-size="12"
-                :page-sizes="[12, 24, 36, 48]"
-                layout="total,sizes, prev, pager, next, jumper"
-                :total="currentTotal">
-        </el-pagination>
-</div>
-</template>
-
-<script>
-    import axios from "axios";
-
-    export default {
-      name: "houseItem.vue",
-      data(){
-          return{
-            currentTotal: 0,
-            currentPage: 1,
-            pageSize: 12,
-            /*houses:['All', 'work', 'play', 'makes', 'jack', 'dull', 'boy', ',', 'work', 'play'],*/
-            houses:[]
-          }
-      },
-      created:function(){
-        this.getList()
-      },
-      methods:{
-        async getList(){
-            const path = 'http://localhost:5000/api/allHouses'
-            axios.get(path)
-                .then(response => {
-                    let all = response.data.house;
-                    this.currentTotal = all.length
-                    let i = 0;
-                    while (i< all.length){
-                        let p = all[i][80]
-                        let a = all[i][4]/*mianji*/
-                        let n = all[i][12]
-                        let t = all[i][2]
-                        let bd = all[i][51]/*bedroom*/
-                        let ba = all[i][50]*0.5+all[i][49]/*bathroom*/
-                        let r = a.toString() + " sqft"
-                        if (ba == 1){
-                            r = ba.toString() + " ba " + r
-                        }
-                        else{
-                          r = ba.toString() + " bas " + r
-                        }
-                        if (bd == 1){
-                            r = bd.toString() + " bd " + r
-                        }
-                        else{
-                          r = bd.toString() + " bds " + r
-                        }
-
-                        if (n == "Blmngtn"){
-                            n = "Bloomington Heights"
-                        }
-                        else if (n == "Blueste"){
-                            n = "Bluestem"
-                        }
-                        else if (n == "BrDale"){
-                            n = "Briardale"
-                        }
-                        else if (n == "BrkSide"){
-                            n = "Brookside"
-                        }
-                        else if (n == "ClearCr"){
-                            n = "Clear Creek"
-                        }
-                        else if (n == "CollgCr"){
-                            n = "College Creek"
-                        }
-                        else if (n == "Crawfor"){
-                            n = "Crawford"
-                        }
-                        else if (n == "Edwards"){
-                            n = "Edwards"
-                        }
-                        else if (n == "Gilbert"){
-                            n = "Gilbert"
-                        }
-                        else if (n == "IDOTRR"){
-                            n = "Iowa DOT and Rail Road"
-                        }
-                        else if (n == "MeadowV"){
-                            n = "Meadow Village"
-                        }
-                        else if (n == "Mitchel"){
-                            n = "Mitchell"
-                        }
-                        else if (n == "NAmes"){
-                            n = "North Ames"
-                        }
-                        else if (n == "NoRidge"){
-                            n = "Northridge"
-                        }
-                        else if (n == "NPkVill"){
-                            n = "Northpark Villa"
-                        }
-                        else if (n == "NridgHt"){
-                            n = "Northridge Heights"
-                        }
-                        else if (n == "NWAmes"){
-                            n = "Northwest Ames"
-                        }
-                        else if (n == "OldTown"){
-                            n = "Old Town"
-                        }
-                        else if (n == "SWISU"){
-                            n = "South & West of Iowa State University"
-                        }
-                        else if (n == "Sawyer"){
-                            n = "Sawyer"
-                        }
-                        else if (n == "SawyerW"){
-                            n = "Sawyer West"
-                        }
-                        else if (n == "Somerst"){
-                            n = "Somerset"
-                        }
-                        else if (n == "StoneBr"){
-                            n = "Stone Brook"
-                        }
-                        else if (n == "Timber"){
-                            n = "Timberland"
-                        }
-                        else if (n == "Veenker"){
-                            n = "Veenker"
-                        }
-
-                        if (t == "A"){
-                            t = "Agriculture"
-                        }
-                        else if (t == "C"){
-                            t = "Commercial"
-                        }
-                        else if (t == "FV"){
-                            t = "Floating Village Residential"
-                        }
-                        else if (t == "I"){
-                            t = "Industrial"
-                        }
-                        else if (t == "RH"){
-                            t = "Residential High Density"
-                        }
-                        else if (t == "RL"){
-                            t = "Residential Low Density"
-                        }
-                        else if (t == "RP"){
-                            t = "Residential Low Density Park"
-                        }
-                        else if (t == "RM") {
-                            t = "Residential Medium Density"
-                        }
-                        p = "$"+p
-                        this.houses.push({price:p,room:r,neighborhood:n,type:t})
-                        i++
-                    }
-
-                })
-                .catch(error => {
-                    console.log(error)
-                })
-        },
-        handleSizeChange(val) {
-            this.pageSize = val
-            console.log(`每页 ${val} 条`);
-        },
-        handleCurrentChange(val) {
-            this.currentPage = val
-            console.log(`当前页: ${val}`);
-        }
-      }
-    }
-</script>
-
-<style scoped>
-.image {
-    width: 100%;
-    display: block;
-  }
-
-.el-row {
-    margin-bottom: 20px;
-    display: flex;
-    flex-wrap: wrap
-  }
-
-.el-card {
-    min-width: 100%;
-    height: 100%;
-  }
-
-</style>
\ No newline at end of file
